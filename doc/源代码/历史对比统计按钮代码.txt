'根据选中的 第四层分类确定 获取数据库连接信息 并保存到 Connections中 
'需要用到全局变量有  
'    Public ds As New GISQ.DataManager.Schema.DatabaseSchema ->  public_currentDatabaseSchema
'    Public bname As String '表名称 -> public_currentLayerSchemaName
'   Public fzzdname As String '分组字段名称   -》public_currentGroupFieldChName 
'   public_currentGroupFieldChName 从 RibbonTabs("数据统计").Groups("功能组1").Items("工具栏5").Items("Combox10").Text
public_currentDatabaseSchema = ds
public_currentLayerSchemaName = bname
public_currentGroupFieldName = fzzdname '比如 "地类编码"
public_currentTotalFieldEnName = tjnrname '比如 "图斑面积:tbmj"

If String.IsNullOrEmpty(public_currentGroupFieldName) Then
	MsgBox("分组字段名称为空 请检查")
	Return
End If
If String.IsNullOrEmpty(public_currentTotalFieldEnName) Then
	MsgBox("统计字段名称为空 请检查")
	Return
End If
If public_currentDatabaseSchema Is Nothing Then
	MsgBox("通过配置名称【" & public_currentDataBaseName & "】获取的DatabaseSchema为空 请检查")
	Return
End If

'TBD public_currentDatabaseSchema public_currentDataBaseConnection 处理为空的场景
public_currentDataBaseConnection = public_currentDatabaseSchema.DefaultConnection

If public_currentDataBaseConnection Is Nothing Then
	MsgBox("通过 名称【" & public_currentDataBaseName & "】获取的DatabaseSchema 获取不到数据库连接名信息 请检查")
	Return
End If

Dim dbConnectionInfo As GISQ.Util.Data.DbConnectionInfo = GISQ.Framework.DbConnectHelper.GetDbConnection(public_currentDataBaseConnection)
If dbConnectionInfo Is Nothing Then
	MsgBox("数据结构中找不到名称为【" & public_currentDataBaseConnection & "】连接信息，请检查！")
	Return
End If
Dim connectString As String = "Provider=OraOLEDB.Oracle.1;" & dbConnectionInfo.GetConnectString()

If connectString Is Nothing Then
	MsgBox("数据结构中名称为【" & public_currentDataBaseName & "】连接信息中数据库连接串信息为空，请检查！")
	Return
End If

'并保存到 Connections中 
If Not Connections.Contains(public_currentDataBaseConnection) Then
	Connections.Add(public_currentDataBaseConnection, connectString)
	'MsgBox("Connections add " & public_currentDataBaseConnection & connectString)
End If

public_currentGroupFieldChName = RibbonTabs("数据统计").Groups("功能组1").Items("工具栏5").Items("Combox10").Text
If public_currentGroupFieldChName Is Nothing Then
	MsgBox("分组字段中文名称为空 请检查")
	Return
End If
'MsgBox(public_currentGroupFieldName)
'从字段中根据分组字段的 中文名称 获取动态列信息(包括 名称 和 值)
ListDic = GISQ.DataManager.RuleConfigHelper.Dictionaries 'TBD ListDic 已经有值 不需要内容
Dim currentGroupFieldRelationDic As GISQ.DataManager.Dictionary

For Each dic As GISQ.DataManager.Dictionary In ListDic
	If dic.DictID = public_currentGroupFieldName Then
		currentGroupFieldRelationDic = dic
	End If
Next

If currentGroupFieldRelationDic Is Nothing OrElse currentGroupFieldRelationDic.CodeNames.Count = 0 Then
	MsgBox("分组字段【" & public_currentGroupFieldChName & "】没有获取到关联的数据字典项 不能进行统计" & vbCrLf & "分组字段需要获取到关联的数据字典项才能统计 请检查关联的数据字典项配置")
	Return
End If
If currentGroupFieldRelationDic.CodeNames.Count = 0 Then
	MsgBox("分组字段【" & public_currentGroupFieldChName & "】关联的数据字典项个数为0 不能进行统计" & vbCrLf & "分组字段需要有关联的数据字典项才能统计 请检查关联的数据字典项配置")
	Return
End If

Dim groupFieldExpression As String
Dim xzqbmFieldENName As String = public_xzqbmFieldENName ' 行政区编码信息字段
Dim xzqbmGroupExpression As String = public_xzqbmGroupExpression '行政区编码 分组 表达式
Dim qxdmChName = public_qxdmChName
Dim qxmcChName = public_qxmcChName
Dim smcChName = public_smcChName
Dim sjdmName = "djdm"
Dim stasticCol = 3
groupFieldExpression = public_currentGroupFieldName & ""
'TBD 分组字段的分组表达式 开发环境 生产环境 地类编码 字段 分组先用 substr(dlbm, 1, 2) 后期修改为 不需要截取前两位  比如不需要 substr(dlbm, 1, 2); 

xzqbmGroupExpression = xzqbmFieldENName
If xzqbmGroupExpression Is Nothing Then
	MsgBox("行政区分组表达式【" & xzqbmGroupExpression & "】为空 请检查")
	Return
End If
If xzqbmFieldENName Is Nothing Then
	MsgBox("行政区字段【" & xzqbmFieldENName & "】为空 请检查")
	Return
End If
If groupFieldExpression Is Nothing Then
	MsgBox("行政区分组表达式【" & groupFieldExpression & "】为空 请检查")
	Return
End If
If xzqbmFieldENName Is Nothing Then
	MsgBox("行政区字段【" & xzqbmFieldENName & "】为空 请检查")
	Return
End If
If dwzhbl = 0 Then
	MsgBox("单位转换比例没有设置 请检查")
	Return
End If
If String.IsNullOrEmpty(public_currentTotalFieldEnName) Then
	MsgBox("统计内容不能为空 请检查")
	Return
End If
'datayearColName, public_currentGroupFieldChName, sjdmValue, GroupFieldAliasChName
Dim datayearColName = "datayear"
Dim sjdmValue = XzqhCode
Dim GroupFieldAliasChName = "名称"
Dim currentDataYearTbNameSuffix = "" 'TBD 当前年份时表的后缀 备注:有可能当前年份提前生成到历史表 比如 _2019
'加载年份 
Dim dataYearDic As Dictionary(Of String, Boolean) = New Dictionary(Of String, Boolean)
Dim dataYearList As String()
If String.IsNullOrEmpty(StartYear) Then
	MsgBox("请需要进行数据对比的年份")
	Return
End If
dataYearList = StartYear.Split(","c)
Dim now As Integer = Format(Date.Now, "yyyy")
Dim ssc As SqlSugar.SqlSugarClient
ssc = FoxtableXZQ.XZQClass.GetSqlSugarClient(dbConnectionInfo)
'判断表是否再库里存在
'判断是否当前年份 是的话 表名直接用 public_currentLayerSchemaName 
For Each iyear As String In dataYearList
	Dim TableName As String = public_currentLayerSchemaName & ""
	If iyear <> now Then
		TableName = TableName & "_" & iyear
	End If
	dataYearDic.Add(iyear, ssc.DbMaintenance.IsAnyTable(TableName, False))
Next

Dim pivotNames As String = "" '数据年份行转列的sql 语句段
Dim datayearCols As String = ""
'加入sql年份用于行转列的部分
For Each dataYear As String In dataYearList
	If dataYearDic(dataYear) Then
		pivotNames &= dataYear & " """ & dataYear & ""","
		datayearCols &= """" & dataYear & ""","
	End If
Next

pivotNames = pivotNames.TrimEnd(","c)
datayearCols = datayearCols.TrimEnd(","c)
' output.show(pivotNames)

' 0 xzqbmGroupExpression  1 xzqbmFieldENName 2 groupFieldExpression 3 public_currentGroupFieldName
' 4 public_currentTotalFieldEnName 5 public_currentLayerSchemaName 6 pivotNames 7 sjdmName 8  datayearColName 
' 9 public_currentGroupFieldChName 10 sjdmValue 11 GroupFieldAliasChName 12 dwzhbl 13 datayearcols
'组装sql 分组统计的sql语句
Dim innerSql As String
For Each dataYear As String In dataYearList
	If Not dataYearDic(dataYear) Then
		Continue For
	End If
	Dim dataYearTbNameSuffix = ""
	If DateTime.Now.Year.ToString() = dataYear Then
		dataYearTbNameSuffix = currentDataYearTbNameSuffix
	Else
		dataYearTbNameSuffix = "_" + dataYear
	End If

	If String.IsNullOrEmpty(sjdmValue) Then
		innerSql = innerSql & "select '" & dataYear & "' As {8}, {2} ""{9}"", sum({4}) {4} from {5}" & dataYearTbNameSuffix & " group by {2} "
	Else
		innerSql = innerSql & "select '" & dataYear & "' As {8}, {2} ""{9}"", sum({4}) {4} from {5}" & dataYearTbNameSuffix & " where {1} Like '{10}%' group by {2} "
	End If
	innerSql = innerSql & " Union All "
Next
'TBD 去除 末尾的 Union All
innerSql = innerSql.Substring(0, innerSql.LastIndexOf("Union All"))
' 组装完整sql 
'select  tb."地类编码","地类编码" As "名称",TB."djdm","2017","2018","2019"
Dim sql = "select tb.""{9}"", ""{9}"" As ""{11}"", {13} from ("
sql = sql & "Select uniontb.* from ("
sql = sql & innerSql
sql = sql & ") uniontb )  pivot (sum({4}*{12}) For {8} In ({6})) tb order by tb.""{9}"""
sql = String.Format(sql, xzqbmGroupExpression, xzqbmFieldENName, groupFieldExpression, public_currentGroupFieldName, public_currentTotalFieldEnName, public_currentLayerSchemaName, pivotNames, sjdmName, datayearColName, public_currentGroupFieldChName, sjdmValue, GroupFieldAliasChName, dwzhbl, datayearCols)
'output.show(sql)
Dim stasticTableName As String = "表A"
Dim t As Table = Tables(stasticTableName)
t.Visible = False
Forms("加载").Open()
DataTables(stasticTableName).Fill(sql, public_currentDataBaseConnection, True)
'如果没有数据 而且表A结构中GroupFieldAliasChName 列不存在则视为sql语句执行出错，写入日志并提示用户
If t.Rows.Count = 0 Then
	If Not t.Cols.Contains(GroupFieldAliasChName) Then
		MsgBox("用于统计的sql语句执行出错,请查看C:\foxtablesqlquery.txt 保存的sql语句是否可以在plsql等软件上成功执行 ")
		Output.Logs("操作日志").Add("sql:" & sql)
		Output.Logs("操作日志").Save("C:\foxtablesqlquery.txt", True)
		Return
	End If
End If

Dim CodeAndNameDic As Dictionary(Of String, String) = New Dictionary(Of String, String)()
Dim names As List(Of GISQ.DataManager.CodeName) = New List(Of GISQ.DataManager.CodeName)()
For Each codeName As GISQ.DataManager.CodeName In currentGroupFieldRelationDic.CodeNames
	names = codeName.CodeNames
	If names Is Nothing Then
		If CodeAndNameDic.ContainsKey(codeName.Code) Then
			Continue For
		End If
		CodeAndNameDic.Add(codeName.Code, codeName.Name)
	Else
		For Each name As GISQ.DataManager.CodeName In names
			If CodeAndNameDic.ContainsKey(name.Code) Then
				Continue For
			End If
			CodeAndNameDic.Add(name.Code, name.Name)
		Next
	End If
Next

For i As Integer = 0 To t.Rows.Count - 1
	'地类名称 列 根据地类编码获取地类名称
	If CodeAndNameDic.ContainsKey(t.Rows(i)(public_currentGroupFieldChName)) Then
		t.Rows(i)(GroupFieldAliasChName) = CodeAndNameDic(t.Rows(i)(public_currentGroupFieldChName))
	End If
	For colIndex As Integer = stasticCol To DataTables(stasticTableName).DataCols.Count - 1
		t.Rows(i)(colIndex) = Round2(t.Rows(i)(colIndex), 2)
	Next
Next
DataTables("表A").DataCols.Add("计算", GetType(Double))
Forms("加载").Close()
If Forms("图表展示").Opened Then
	Forms("图表展示").Close
	Forms("图表展示").Open
End If
MainTable = t
t.Visible = True
